<div class="client-dashboard">
  <div class="header">
    <h1>Client Dashboard</h1>
    <div class="user-info">
      <p>Welcome, <%= @user.name %></p>
      <p>Email: <%= @user.email %></p>
    </div>
    <div class="logout">
      <%= button_to 'Sign Out', destroy_user_session_path, method: :delete, class: 'logout-button' %>
    </div>
  </div>

  <div class="content">
    <h2>New Request</h2>
    
    <%= form_with(model: @request, url: clients_create_request_path, local: true, class: 'request-form') do |f| %>
      <div class="form-group">
        <%= f.label :request_type, "Request Type" %>
        <%= f.select :request_type, 
            options_for_select([['Technical Request', 'technical'], ['Course Content Request', 'course']]), 
            { prompt: 'Select request type' },
            { class: 'form-control', id: 'request-type-select' } 
        %>
      </div>

      <div id="technical-fields" class="dynamic-fields" style="display: none;">
        <div class="form-group">
          <%= f.fields_for :technical_request do |tf| %>
            <%= tf.label :description, "Technical Issue Description" %>
            <%= tf.text_area :description, class: 'form-control', rows: 5 %>
          <% end %>
        </div>
      </div>

      <div id="course-fields" class="dynamic-fields" style="display: none;">
        <div class="form-group">
          <%= f.fields_for :course_content_request do |cf| %>
            <%= cf.label :course, "Course" %>
            <%= cf.select :course, 
                options_for_select([
                  ['Programmēšanas pamati ar Ruby', 'Programmēšanas pamati ar Ruby'],
                  ['Web izstrāde ar HTML, CSS un JavaScript', 'Web izstrāde ar HTML, CSS un JavaScript'],
                  ['Datu struktūras un algoritmi', 'Datu struktūras un algoritmi'],
                  ['Bāzes dati un SQL pamati', 'Bāzes dati un SQL pamati'],
                  ['Mašīnmācīšanās ievads', 'Mašīnmācīšanās ievads'],
                  ['Tīmekļa drošība un hakeru domāšana', 'Tīmekļa drošība un hakeru domāšana'],
                  ['Mobilo lietotņu izstrāde ar React Native', 'Mobilo lietotņu izstrāde ar React Native'],
                  ['Versiju kontrole ar Git un GitHub', 'Versiju kontrole ar Git un GitHub'],
                  ['Testēšanas automatizācija ar Selenium un Robot Framework', 'Testēšanas automatizācija ar Selenium un Robot Framework'],
                  ['Agilā izstrāde un Scrum komandas darbs', 'Agilā izstrāde un Scrum komandas darbs']
                ]),
                { prompt: 'Select a course' },
                { class: 'form-control' }
            %>
            <%= cf.label :category, "Category" %>
            <%= cf.select :category, 
                options_for_select([
                  ['Neprecīza informācija', 'Neprecīza informācija'],
                  ['Gramatikas kļūdas vai valodas problēmas', 'Gramatikas kļūdas vai valodas problēmas'],
                  ['Trūkst saturs vai materiāli', 'Trūkst saturs vai materiāli'],
                  ['Nestrādā testi vai uzdevumi', 'Nestrādā testi vai uzdevumi']
                ]),
                { prompt: 'Select a category' },
                { class: 'form-control' }
            %>
            <%= cf.label :description, "Description" %>
            <%= cf.text_area :description, class: 'form-control', rows: 5 %>
          <% end %>
        </div>
      </div>

      <div class="form-actions">
        <%= f.submit "Submit Request", class: 'submit-button' %>
      </div>
    <% end %>

    <div id="request-success" class="alert alert-success" style="display: none;">
      Your request has been submitted successfully!
    </div>
  </div>
</div>

<div class="contracts-section">
  <h2>Your Contracts</h2>
  <% pending_contracts = @contracts.where.not(status: 'accepted') %>
  <% if pending_contracts.any? %>
    <% pending_contracts.each do |contract| %>
      <div class="contract-item">
        <div class="contract-details">
          <p>Contract Number: <%= contract.id %></p>
          <p>Registration Date: <%= contract.registration_time ? contract.registration_time.strftime('%B %d, %Y') : 'Not registered' %></p>
          <p>Status: <%= contract.status.titleize %></p>
        </div>
        <div class="contract-actions">
          <% if contract.pdf.attached? %>
            <%= link_to 'Download PDF', download_contract_path(contract), class: 'btn btn-primary' %>
          <% end %>
          <%= button_to 'Accept Contract', accept_contract_path(contract), 
                        method: :post, 
                        class: 'btn btn-success',
                        data: { confirm: 'Are you sure you want to accept this contract?' } %>
        </div>
      </div>
    <% end %>
  <% else %>
    <p class="no-contracts">You don't have any pending contracts.</p>
  <% end %>
</div>

<% content_for :head do %>
  <style>
    .client-dashboard {
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 1px solid #eee;
    }

    .user-info {
      text-align: right;
    }

    .user-info p {
      margin: 5px 0;
      color: #666;
    }

    .logout-button {
      background-color: #dc3545;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .logout-button:hover {
      background-color: #c82333;
    }

    .content {
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
      color: #333;
      margin: 0;
    }

    h2 {
      color: #666;
      margin-top: 0;
      margin-bottom: 20px;
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 5px;
      color: #555;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
    }

    .submit-button {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .submit-button:hover {
      background-color: #218838;
    }

    .alert {
      padding: 15px;
      margin-top: 20px;
      border-radius: 4px;
    }

    .alert-success {
      background-color: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    .contracts-section {
      margin-top: 30px;
      background-color: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .contracts-list {
      margin-top: 20px;
    }

    .contract-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px;
      border: 1px solid #eee;
      border-radius: 4px;
      margin-bottom: 10px;
      transition: background-color 0.3s;
    }

    .contract-item:hover {
      background-color: #f8f9fa;
    }

    .contract-info {
      display: flex;
      gap: 20px;
      align-items: center;
    }

    .contract-number {
      font-weight: bold;
      color: #333;
    }

    .contract-date {
      color: #666;
    }

    .contract-status {
      padding: 4px 8px;
      border-radius: 4px;
      font-size: 0.9em;
      background-color: #e9ecef;
      color: #495057;
    }

    .download-button {
      background-color: #007bff;
      color: white;
      padding: 8px 16px;
      border-radius: 4px;
      text-decoration: none;
      transition: background-color 0.3s;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .download-button:hover {
      background-color: #0056b3;
      color: white;
      text-decoration: none;
    }

    .no-contracts {
      text-align: center;
      color: #666;
      padding: 20px;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const requestTypeSelect = document.getElementById('request-type-select');
      const technicalFields = document.getElementById('technical-fields');
      const courseFields = document.getElementById('course-fields');
      const requestForm = document.querySelector('.request-form');
      const successMessage = document.getElementById('request-success');

      requestTypeSelect.addEventListener('change', function() {
        if (this.value === 'technical') {
          technicalFields.style.display = 'block';
          courseFields.style.display = 'none';
        } else if (this.value === 'course') {
          technicalFields.style.display = 'none';
          courseFields.style.display = 'block';
        } else {
          technicalFields.style.display = 'none';
          courseFields.style.display = 'none';
        }
      });

      requestForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        
        fetch('/clients/create_request', {
          method: 'POST',
          body: formData,
          headers: {
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            successMessage.style.display = 'block';
            requestForm.reset();
            technicalFields.style.display = 'none';
            courseFields.style.display = 'none';
          } else {
            alert('Failed to submit request: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('An error occurred while submitting the request');
        });
      });
    });
  </script>
<% end %>
